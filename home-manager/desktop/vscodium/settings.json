{
  "chat.editor.fontFamily": "JetBrainsMono Nerd Font",
  "chat.editor.fontSize": 17.333333333333332,
  "debug.console.fontFamily": "JetBrainsMono Nerd Font",
  "debug.console.fontSize": 17.333333333333332,
  "editor.fontFamily": "JetBrainsMono Nerd Font",
  "editor.fontSize": 17.333333333333332,
  "editor.inlayHints.fontFamily": "JetBrainsMono Nerd Font",
  "editor.inlineSuggest.fontFamily": "JetBrainsMono Nerd Font",
  "editor.minimap.sectionHeaderFontSize": 11.142857142857142,
  "markdown.preview.fontFamily": "SFProDisplay Nerd Font",
  "markdown.preview.fontSize": 17.333333333333332,
  "scm.inputFontFamily": "JetBrainsMono Nerd Font",
  "scm.inputFontSize": 16.095238095238095,
  "screencastMode.fontSize": 69.33333333333333,
  "terminal.integrated.fontSize": 17.333333333333332,
  "editor.formatOnSave": true,
  "telemetry.feedback.enabled": false,
  "continue.telemetryEnabled": false,
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "workbench.iconTheme": "material-icon-theme",

  // Nix
  "nix.enableLanguageServer": true,
  "nix.serverPath": "nixd", // "nil" or "nixd"
  // LSP config can be passed via the ``nix.serverSettings.{lsp}`` as shown below.
  "nix.serverSettings": {
    // check https://github.com/oxalica/nil/blob/main/docs/configuration.md for all options available
    "nil": {
      // "diagnostics": {
      //  "ignored": ["unused_binding", "unused_with"],
      // },
      "formatting": {
        "command": ["alejandra"],
      },
    },
    // check https://github.com/nix-community/nixd/blob/main/nixd/docs/configuration.md for all nixd config
    "nixd": {
      "formatting": {
        "command": ["alejandra"],
      },
      "options": {
        // By default, this entry will be read from `import <nixpkgs> { }`.
        // You can write arbitrary Nix expressions here, to produce valid "options" declaration result.
        // Tip: for flake-based configuration, utilize `builtins.getFlake`
        "nixos": {
          //"expr": "(builtins.getFlake \"/absolute/path/to/flake\").nixosConfigurations.<name>.options",
        },
        "home-manager": {
          //"expr": "(builtins.getFlake \"/absolute/path/to/flake\").homeConfigurations.<name>.options",
        },
        // Tip: use ${workspaceFolder} variable to define path
        "nix-darwin": {
          //"expr": "(builtins.getFlake \"${workspaceFolder}/path/to/flake\").darwinConfigurations.<name>.options",
        },
      },
    }
  }
}